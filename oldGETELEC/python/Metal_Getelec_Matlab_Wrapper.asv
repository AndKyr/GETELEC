function Current_Density = Metal_Getelec_Matlab_Wrapper(Field, Radius, Gamma, Ef, T)

    %Checking and initialising Python environment
    pe = pyenv;
    if pe.Status == 'Loaded'
        % pass
    else 
        disp("Initialising Python enviroment");
        pyenv("Version","/home/salva/Documents/getelec_priv/python/venv/bin/python3.8")
        pyenv("ExecutionMode","OutOfProcess");
    end
    
    %Pointing MATLAB to the right Python path
    if count(py.sys.path, '/home/salva/Documents/getelec_priv/python') == 0
        disp('Loading path')
        insert(py.sys.path, int64(0),'/home/salva/Documents/getelec_priv/python');
    else
        %pass
    end


    % WARNING: parfor returns a warming about missing libraries/functions +
    %and error from using dummy as indexing is not supported by the that
    %variable
    %Checking and initiliasing parallel processing
    %if isempty(gcp('nocreate')) == 1
    %    disp('Initialising parpool');
    %    parpool
    %else
        %pass
    %end
    
    %Initialising arrays to store our data
    Current_Density = zeros(1:length(Field));
    %Nottingham_Heat = zeros(1:lenght(Field));

    %Importing the Python library
    disp('Calculating J and Pn from metal emitter')
    for i = 1:lenght(Field)
        getelec_data = cell(getelec.metal_emitter(Field(i), Radius(i), Gamma(i), Ef(i), T(i)));
        Current_Density(i) = getelec_data(1);
        %Nottingham_Heat(i) = getelec_data(2);
    end
    
    %disp(Current_Density, Nottingham_Heat);

end