from distutils.file_util import write_file
import json
from math import gamma
import os
import sys
import numpy as np

import timeit

mainpath,filename = os.path.split(os.path.realpath(__file__))

emissionpath,mainfolder = os.path.split(mainpath)
emissionpath,mainfolder = os.path.split(emissionpath)

pythonpath = emissionpath + '/interfaces/web_interface'
sys.path.append(pythonpath)

from getelec_online import current_metal_emitter, heat_metal_emitter, spectrum_metal_emitter
from getelec_online import current_semiconductor_emitter, heat_semiconductor_emitter, spectrum_semiconductor_emitter

from getelec_online import fit_data

_data = '{"Voltage":[6666.66666667,6528.49740933,6395.93908629,6268.65671642,6146.34146341,6028.70813397,5915.49295775,5806.4516129,5701.35746606,5600,5502.18340611,5407.72532189,5316.4556962,5228.21576763,5142.85714286,5060.24096386,4980.23715415,4902.72373541,4827.5862069,4754.71698113,4684.01486989,4615.38461538,4548.73646209,4483.98576512,4421.05263158,4359.8615917,4300.34129693,4242.42424242,4186.04651163,4131.14754098,4077.66990291,4025.55910543,3925.23364486,3876.92307692,3829.78723404,3783.78378378,3738.87240356,3695.01466276,3652.17391304,3610.31518625,3569.40509915,3529.41176471,3490.30470914,3452.05479452,3414.63414634,3378.01608579,3342.17506631,3307.08661417,3272.72727273,3239.07455013,3206.10687023,3173.80352645,3142.1446384,3111.11111111,3080.68459658,3050.84745763,3021.58273381,2992.87410926,2964.70588235,2937.06293706,2909.93071594,2883.29519451,2857.14285714],"Current":[0.0000565354016,0.0000428464283,0.0000324541251,0.0000245683389,0.0000185875533,0.0000140539879,0.0000106193664,0.00000801882052,0.00000605098032,0.00000456287757,0.0000034382595,0.00000258892706,0.00000194793392,0.00000146451644,0.00000110020423,8.25856631e-7,6.19415049e-7,4.64192603e-7,3.47574447e-7,2.6003067e-7,1.94366991e-7,1.45156296e-7,1.08307623e-7,8.07395611e-8,6.01329743e-8,4.47437594e-8,3.32614033e-8,2.47019853e-8,1.83274191e-8,1.358451e-8,1.00590041e-8,7.44096972e-9,4.05929377e-9,2.9935571e-9,2.20530977e-9,1.62290148e-9,1.19302882e-9,8.76074733e-10,6.42626597e-10,4.70867981e-10,3.44633799e-10,2.51960496e-10,1.83999483e-10,1.34216889e-10,9.77911792e-11,7.11688901e-11,5.17338317e-11,3.75620267e-11,2.72401384e-11,1.97311118e-11,1.42748585e-11,1.03149269e-11,7.44441693e-12,5.36613434e-12,3.86326821e-12,2.77783297e-12,1.99486455e-12,1.4307744e-12,1.02488643e-12,7.33204336e-13,5.23857148e-13,3.73798141e-13,2.66375053e-13],"Work_function":[4.5],"CalculateR":0}'


def main():

    data = json.loads(_data)

    xdata = 1./np.array(data['Voltage'])
    ydata = np.log(np.array(data['Current']))
    workFunction = np.full(ydata.shape, float(data['Work_function'][0]))

    xplot, xplot_th, yth, beta, radius, sigmaAeff = fit_data(xdata, ydata, workFunction, mode = "simple")

    outdata = { "type": "ivCalc",
                "xplot_mrk": xplot.tolist(), "yplot_mrk": data['Current'], \
                "xplot_line": xplot_th.tolist(), "yplot_line": yth.tolist(), \
                "beta": beta, "sigma_Aeff": sigmaAeff, \
                "xAxisUnit": "1 / (Local Field [V/nm])", "yAxisUnit": "Current [Amps]"}

    print(json.dumps(outdata))


main()